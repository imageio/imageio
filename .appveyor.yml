# CI on Windows via appveyor
# This file was based on Olivier Grisel's python-appveyor-demo

environment:

  matrix:

    - PYTHON: "C:\\Python36-conda64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./tasks/install_python.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the build dependencies of the project. 
  #- "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  - "python -m pip install invoke"
  - "python -m pip install pytest pytest-cov"
  - "python -m pip install wheel"
  - "python -m pip install psutil"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Run the project tests
  - invoke test --unit"

after_test:
  # If tests are successful, create a whl package for the project.
  - python setup.py bdist_wheel bdist_wininst"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
